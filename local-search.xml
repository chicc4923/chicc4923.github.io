<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>RocketMQ</title>
    <link href="/2024/07/01/RocketMQ/"/>
    <url>/2024/07/01/RocketMQ/</url>
    
    <content type="html"><![CDATA[<h1 id="部署方式">部署方式</h1><p>Docker-compose 方式部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull apacherocketmq/rocketmq-dashboard:latest<br>docker pull apache/rocketmq:latest<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.3&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">namesrv:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">apache/rocketmq:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">rmqnamesrv</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">9876</span><span class="hljs-string">:9876</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">JAVA_OPT_EXT:</span> <span class="hljs-string">&quot;-server -Xms512m -Xmx512m&quot;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/home/max/Desktop/rocketmq/broker/logs:/home/rocketmq/logs</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">sh</span> <span class="hljs-string">mqnamesrv</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>  <span class="hljs-attr">broker1:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">apache/rocketmq:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">rmqbroker</span><br>    <span class="hljs-attr">links:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">namesrv</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">10909</span><span class="hljs-string">:10909</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">10911</span><span class="hljs-string">:10911</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">10912</span><span class="hljs-string">:10912</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">NAMESRV_ADDR:</span> <span class="hljs-string">namesrv:9876</span><br>      <span class="hljs-attr">JAVA_OPT_EXT:</span> <span class="hljs-string">&quot;-server -Xms512m -Xmx512m&quot;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/home/max/Desktop/rocketmq/broker/logs:/home/rocketmq/logs</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/home/max/Desktop/rocketmq/broker/store:/home/rocketmq/store</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">/home/max/Desktop/rocketmq/broker/conf/broker.conf:/opt/rocketmq/conf/broker.conf</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">sh</span> <span class="hljs-string">mqbroker</span> <span class="hljs-string">-c</span> <span class="hljs-string">/opt/rocketmq/conf/broker.conf</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>  <span class="hljs-attr">dashbord:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">apacherocketmq/rocketmq-dashboard:latest</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:8080</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">JAVA_OPTS:</span> <span class="hljs-string">&quot;-Drocketmq.namesrv.addr=namesrv:9876&quot;</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br><br></code></pre></td></tr></table></figure><h1 id="rocketmq-基础概念：">RocketMQ 基础概念：</h1><h1 id="基本概念">基本概念</h1><hr><h2 id="1-消息模型（message model）">1 消息模型（Message Model）</h2><p>RocketMQ 主要由 Producer、Broker、Consumer 三部分组成，其中 Producer 负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。Broker 在实际部署过程中对应一台服务器，每个 Broker 可以存储多个 Topic 的消息，每个 Topic 的消息也可以分片存储于不同的 Broker。Message Queue 用于存储消息的物理地址，每个 Topic 中的消息地址存储于多个 Message Queue 中。ConsumerGroup 由多个 Consumer 实例构成。</p><h2 id="2-消息生产者（producer）">2 消息生产者（Producer）</h2><p>负责生产消息，一般由业务系统负责生产消息。一个消息生产者会把业务应用系统里产生的消息发送到 broker 服务器。RocketMQ 提供多种发送方式，同步发送、异步发送、顺序发送、单向发送。同步和异步方式均需要 Broker 返回确认信息，单向发送不需要。</p><h2 id="3-消息消费者（consumer）">3 消息消费者（Consumer）</h2><p>负责消费消息，一般是后台系统负责异步消费。一个消息消费者会从 Broker 服务器拉取消息、并将其提供给应用程序。从用户应用的角度而言提供了两种消费形式：拉取式消费、推动式消费。</p><h2 id="4-主题（topic）">4 主题（Topic）</h2><p>表示一类消息的集合，每个主题包含若干条消息，每条消息只能属于一个主题，是 RocketMQ 进行消息订阅的基本单位。</p><h2 id="5-代理服务器（broker server）">5 代理服务器（Broker Server）</h2><p>消息中转角色，负责存储消息、转发消息。代理服务器在 RocketMQ 系统中负责接收从生产者发送来的消息并存储、同时为消费者的拉取请求作准备。代理服务器也存储消息相关的元数据，包括消费者组、消费进度偏移和主题和队列消息等。</p><h2 id="6-名字服务（name server）">6 名字服务（Name Server）</h2><p>名称服务充当路由消息的提供者。生产者或消费者能够通过名字服务查找各主题相应的 Broker IP 列表。多个 Namesrv 实例组成集群，但相互独立，没有信息交换。</p><h2 id="7-拉取式消费（pull consumer）">7 拉取式消费（Pull Consumer）</h2><p>Consumer 消费的一种类型，应用通常主动调用 Consumer 的拉消息方法从 Broker 服务器拉消息、主动权由应用控制。一旦获取了批量消息，应用就会启动消费过程。</p><h2 id="8-推动式消费（push consumer）">8 推动式消费（Push Consumer）</h2><p>Consumer 消费的一种类型，应用不需要主动调用 Consumer 的拉消息方法，在底层已经封装了拉取的调用逻辑，在用户层面看来是 broker 把消息推送过来的，其实底层还是 consumer 去 broker 主动拉取消息。</p><h2 id="9-生产者组（producer group）">9 生产者组（Producer Group）</h2><p>同一类 Producer 的集合，这类 Producer 发送同一类消息且发送逻辑一致。如果发送的是事务消息且原始生产者在发送之后崩溃，则 Broker 服务器会联系同一生产者组的其他生产者实例以提交或回溯消费。</p><h2 id="10-消费者组（consumer group）">10 消费者组（Consumer Group）</h2><p>同一类 Consumer 的集合，这类 Consumer 通常消费同一类消息且消费逻辑一致。消费者组使得在消息消费方面，实现负载均衡和容错的目标变得非常容易。要注意的是，消费者组的消费者实例必须订阅完全相同的 Topic。RocketMQ 支持两种消息模式：集群消费（Clustering）和广播消费（Broadcasting）。</p><h2 id="11-集群消费（clustering）">11 集群消费（Clustering）</h2><p>集群消费模式下，相同 Consumer Group 的每个 Consumer 实例平均分摊消息。</p><h2 id="12-广播消费（broadcasting）">12 广播消费（Broadcasting）</h2><p>广播消费模式下，相同 Consumer Group 的每个 Consumer 实例都接收全量的消息。</p><h2 id="13-普通顺序消息（normal ordered message）">13 普通顺序消息（Normal Ordered Message）</h2><p>普通顺序消费模式下，消费者通过同一个消息队列（ Topic 分区，称作 Message Queue） 收到的消息是有顺序的，不同消息队列收到的消息则可能是无顺序的。</p><h2 id="14-严格顺序消息（strictly ordered message）">14 严格顺序消息（Strictly Ordered Message）</h2><p>严格顺序消息模式下，消费者收到的所有消息均是有顺序的。</p><h2 id="15-消息（message）">15 消息（Message）</h2><p>消息系统所传输信息的物理载体，生产和消费数据的最小单位，每条消息必须属于一个主题。RocketMQ 中每个消息拥有唯一的 Message ID，且可以携带具有业务标识的 Key。系统提供了通过 Message ID 和 Key 查询消息的功能。</p><h2 id="16-标签（tag）">16 标签（Tag）</h2><p>为消息设置的标志，用于同一主题下区分不同类型的消息。来自同一业务单元的消息，可以根据不同业务目的在同一主题下设置不同标签。标签能够有效地保持代码的清晰度和连贯性，并优化 RocketMQ 提供的查询系统。消费者可以根据 Tag 实现对不同子主题的不同消费逻辑，实现更好的扩展性。</p><p>代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Go">producer.WithInterceptor(pc.interceptors...),<br>producer.WithInstanceName(pc.InstanceName),<br>producer.WithCredentials(primitive.Credentials&#123;<br>AccessKey: pc.AccessKey,<br>SecretKey: pc.SecretKey,<br>&#125;),<br></code></pre></td></tr></table></figure><p>遇到的问题：</p><ol><li>在控制台查询 Producer 时会出现 <code>producer []group not exist </code><br>猜测：可能是控制台在连接 producer 时，producer 已经被关闭了，所以查找不到<br>解决方案 1：注释掉代码中的 <code>producer.shutdown()</code>，<br>解决方案 2：</li><li>控制台收到消息的顺序似乎不是按时间排序<br>猜测：可能是并发发送的信息。</li><li>遇到生产者可以正常发送消息，但消费者无法接受消息，提示找不到对应的 topic。<br>解决方案：将 <code>consumer.start</code> 放到 <code>consumer.subscribe</code> 之后</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/01/hello-world/"/>
    <url>/2024/07/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a new post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to remote sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
